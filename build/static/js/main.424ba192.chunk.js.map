{"version":3,"sources":["components/detail/store/reducer.js","components/detail/store/actionCreator.js","components/detail/store/actionType.js","store/reducer.js","store/index.js","components/login/index.js","components/detail/index.js","App.js","index.js"],"names":["defaultState","fromJS","list","key","name","prenom","address","currentIndex","setCurrent","type","reducer","combineReducers","detail","prevState","action","set","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","layout","labelCol","span","wrapperCol","tailLayout","offset","login","className","title","subTitle","initialValues","remember","style","Item","label","rules","required","message","Password","valuePropName","to","htmlType","Component","connect","columns","dataIndex","render","text","this","props","clientList","numberAddresToShow","parseInt","rowSelection","columnWidth","onChange","selectedRowKeys","selectedRows","toString","orientation","marginBottom","gutter","justify","dataSource","toJS","height","overflowY","width","pagination","state","getIn","dispatch","actionCreator","App","path","exact","component","Login","Detail","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.424ba192.chunk.js","sourcesContent":["import * as actionType from './actionType.js';\r\nimport { fromJS } from 'immutable';\r\n\r\nconst clientList = [\r\n    {\r\n      key: '1',\r\n      name: 'John',\r\n      prenom: \" Brown\",\r\n      address: 'Address_111111111',\r\n    },\r\n    {\r\n      key: '2',\r\n      name: 'Jim',\r\n      prenom: \" Green\",\r\n      address: 'Address_22222222',\r\n    },\r\n    {\r\n      key: '3',\r\n      name: 'Joe',\r\n      prenom: \" Black\",\r\n      address: 'Address_33333333',\r\n    },\r\n    {\r\n      key: '4',\r\n      name: 'Li',\r\n      prenom: \"Loic\",\r\n      address: 'Address_44444444',\r\n    },\r\n    {\r\n        key: '5',\r\n        name: 'Qiu',\r\n        prenom: \"Paul\",\r\n        address: 'Address_55555555',\r\n      },\r\n      {\r\n        key: '6',\r\n        name: 'Du',\r\n        prenom: \"Delphine\",\r\n        address: 'Address_666666666',\r\n      },\r\n      {\r\n        key: '7',\r\n        name: 'Yan',\r\n        prenom: \"Issac\",\r\n        address: 'Address_777777777',\r\n      },\r\n      {\r\n        key: '8',\r\n        name: 'Zhn',\r\n        prenom: \"Alice\",\r\n        address: 'Address_88888888',\r\n      },\r\n      {\r\n        key: '9',\r\n        name: 'Kong',\r\n        prenom: \"Alexendre\",\r\n        address: 'Address_999999999',\r\n      },\r\n  ];\r\n\r\nconst defaultState = fromJS({\r\n    list : clientList,\r\n    currentIndex : 1\r\n});\r\n\r\n\r\nexport default (prevState = defaultState,action)=>{\r\n\tswitch (action.type) {\r\n        case actionType.SET_CURRENT:\r\n            return prevState.set(\"currentIndex\",action.key);\r\n\t\tdefault:\r\n\t\t\treturn prevState;\r\n\t}\r\n}","import * as actionType from './actionType.js';\r\n\r\n\r\nexport const setCurrent = (key) => {\r\n\treturn {\r\n        type: actionType.SET_CURRENT,\r\n        key\r\n\t}\r\n}","export const SET_CURRENT = 'detail/set_current';\r\n","import { combineReducers } from 'redux-immutable';\r\nimport { detailReducer } from '../components/detail/store';\r\n\r\nconst reducer = combineReducers({\r\n    detail : detailReducer\r\n});\r\n\r\nexport default reducer;\r\n\r\n\r\n","import {createStore,compose,applyMiddleware} from 'redux';\r\nimport reducer from './reducer.js';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer,composeEnhancers(\r\n\tapplyMiddleware(thunk)\r\n));\r\n\r\nexport default store;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { PageHeader } from 'antd';\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 8 }\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 8 },\r\n};\r\n\r\nclass login extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    title=\"Application JUMP\"\r\n                    subTitle=\"Login page\"\r\n                />,\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    style={{\"paddingTop\":\"180px\"}}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        rules={[{ required: true, message: 'Please input your username!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[{ required: true, message: 'Please input your password!' }]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                        <Checkbox>Remember me</Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Link to=\"/detail\">\r\n                            <Button type=\"primary\" htmlType=\"button\">\r\n                                Submit\r\n                            </Button>\r\n                        </Link>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,null\r\n)(login);","import React, { Component,Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { PageHeader } from 'antd';\r\nimport { Divider } from 'antd';\r\nimport { Row, Col } from 'antd';\r\nimport { Table,Card } from 'antd';\r\nimport  { actionCreator } from './store';\r\n\r\n\r\nconst columns = [\r\n    {\r\n      title: 'Nom',\r\n      dataIndex: 'name',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Pr√©nom',\r\n      dataIndex: 'prenom',\r\n    },\r\n];\r\n\r\nclass detail extends Component {\r\n\r\n    render() {\r\n\r\n        const { clientList,setCurrent,currentIndex } = this.props;\r\n\r\n        let numberAddresToShow = parseInt(currentIndex)-1;\r\n\r\n        const rowSelection={\r\n            columnWidth: \"100px\",\r\n            type:\"radio\",\r\n            onChange:function(selectedRowKeys, selectedRows){\r\n                setCurrent(selectedRowKeys);\r\n            },\r\n            selectedRowKeys : [currentIndex.toString()]\r\n        }\r\n\r\n        return (\r\n\r\n            <Fragment>\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    title=\"Application JUMP\"\r\n                    subTitle=\"Detail List\"\r\n                />\r\n                <Divider orientation=\"center\" style={{marginBottom:\"50px\"}}>Client List</Divider>\r\n                <Row gutter={[0,80]} justify=\"center\">\r\n                    <Col >\r\n                        <Table\r\n                            rowSelection={rowSelection}\r\n                            columns={columns}\r\n                            dataSource={clientList.toJS()}\r\n                            style={{height:\"230px\",overflowY:\"scroll\",width:\"500px\"}}\r\n                            pagination={false}\r\n                        /> \r\n                    </Col>\r\n                </Row>\r\n                <Row justify=\"center\">\r\n                    <Col >\r\n                        <Card title=\"Details\" style={{ width: 400 }}>\r\n                            <h2>Address</h2>\r\n                            <p>{clientList.toJS()[numberAddresToShow].address}</p>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        clientList: state.getIn(['detail','list']),\r\n        currentIndex: state.getIn(['detail','currentIndex'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setCurrent(key){\r\n            dispatch(actionCreator.setCurrent(key));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(detail);","import React, { Component, Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport store from './store/index.js';\nimport './App.css';\nimport Login from './components/login';\nimport Detail from './components/detail';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n       <Provider store = {store}>\n        <HashRouter>\n          <Route path='/'  exact component={Login}></Route>\n          <Route path='/detail'  exact component={Detail}></Route>\n        </HashRouter>\n\t     </Provider>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,document.getElementById('root')\n);\n"],"sourceRoot":""}